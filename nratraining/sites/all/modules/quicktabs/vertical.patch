diff --git a/css/vertical.css b/css/vertical.css
new file mode 100644
index 0000000..9b9fac1
--- /dev/null
+++ b/css/vertical.css
@@ -0,0 +1,25 @@
+.quicktabs-hide {
+  display: none;
+}
+
+ul.quicktabs-tabs {
+  margin-top: 0;
+}
+ul.quicktabs-tabs li {
+  background: none;
+  list-style-type: none;
+  padding: 2px;
+  white-space: nowrap;
+}
+ul.quicktabs-tabs li a:focus {
+  outline: none;
+}
+
+.vertical-tabs ul.vertical-tabs-list li.active {
+  background-color: white;
+  border-right-width: 0;
+}
+
+.vertical-tabs-panes {
+  margin: 20px;
+}
\ No newline at end of file
diff --git a/plugins/QuickVertical.inc b/plugins/QuickVertical.inc
new file mode 100644
index 0000000..94fb4b3
--- /dev/null
+++ b/plugins/QuickVertical.inc
@@ -0,0 +1,157 @@
+<?php
+
+/**
+ * Renders the content using the original Quicktabs mechanism of previous versions.
+ * Includes support for ajax rendered content.
+ */
+class QuickVertical extends QuickRenderer {
+  
+  public function render() {
+    $quickset = $this->quickset;
+    
+    $render_array = array();
+
+    $active_tab = $quickset->getActiveTab();
+    if ($tabs = $this->build_tablinks($active_tab)) {
+      $render_array['#attached'] = $this->add_attached();
+
+      $qt_name = $quickset->getName();
+      $settings = $quickset->getSettings();
+      $contents = $quickset->getContents();
+
+      $render_array['content'] = array(
+        '#theme' => 'qt_vertical',
+        '#options' => array('attributes' => array(
+          'id' => 'quicktabs-' . $qt_name,
+          'class' => 'vertical-tabs clearfix quicktabs-wrapper quicktabs-style-' . drupal_strtolower($settings['style']),
+        )),
+        'tabs' => array('#theme' => 'qt_vertical_tab', '#options' => array('active' => $active_tab, 'style' => drupal_strtolower($settings['style'])), 'tablinks' => $tabs),
+        // The main content area, each quicktab container needs a unique id.
+        'container' => array(
+          '#prefix' => '<div id="quicktabs-container-' . $qt_name .'" class="vertical-tabs-panes vertical-tabs-processed quicktabs_main quicktabs-style-' . drupal_strtolower($settings['style']) .'">',
+          '#suffix' => '</div>',
+          'divs' => array(),
+        ),
+      );
+
+      // If in ajax mode, we'll only be rendering one tab, otherwise all of them.
+      $tabs_to_render = $settings['ajax'] ? array($active_tab => $contents[$active_tab]) : $contents;
+      foreach ($tabs_to_render as $key => $tab) {
+        if (!empty($tab)) {
+          $attribs = array(
+            'id' => 'quicktabs-tabpage-'. $qt_name . '-'. $key,
+            'class' => array('quicktabs-tabpage', ($active_tab == $key ? '' : 'quicktabs-hide')),
+          );
+          $render_array['content']['container']['divs'][] = array(
+            '#prefix' => '<div '. drupal_attributes($attribs) .'>',
+            '#suffix' => '</div>',
+            'content' => $tab->render(),
+          );
+        }
+      }
+    }
+    return $render_array;
+  }
+
+  /**
+   * Build the actual tab links, with appropriate href, title and attributes.
+   * 
+   * @param $active_tab The index of the active tab.
+   */
+  protected function build_tablinks($active_tab) {
+    $quickset = $this->quickset;
+    $settings = $quickset->getSettings();
+    $tabs = array();
+    foreach ($quickset->getContents() as $i => $tab) {
+      if (!empty($tab)) {
+        $tablink = array(
+          '#type' => 'link',
+          '#title' => $quickset->translateString($tab->getTitle(), 'tab', $i),
+          '#href' =>  $_GET['q'],
+          '#options' => $this->construct_link_options($i),
+        );
+        if ($settings['ajax']) {
+          $tab_settings = $tab->getSettings();
+          $ajax_keys = $tab->getAjaxKeys();
+          $ajax_args = array();
+          foreach ($ajax_keys as $key) {
+            $ajax_args[] = $tab_settings[$key];
+          }
+          $ajax_path = $quickset->getAjaxPath($i, $tab->getType());
+          $ajax_href = $ajax_path . '/'. implode('/', $ajax_args);
+          $tablink['#ajax'] = array(
+            'progress' => array('message' => '', 'type' => 'throbber'),
+            'path' => $ajax_href,
+          );
+        }
+        $tabs[$i] = $tablink;
+      }
+    }
+    return $tabs;
+  }
+
+  /**
+   * Add any necessary js, css and libraries for the render array.
+   */
+  protected function add_attached() {
+    $attached = array(
+      'css' => array(
+        array('data' => drupal_get_path('module', 'quicktabs') .'/css/vertical.css'),
+        array('data' => 'misc/vertical-tabs.css'),
+      ),
+      'js' => array(
+        array('data' => drupal_get_path('module', 'quicktabs') . '/js/quicktabs.js'),
+        array('data' => 'misc/progress.js', 'weight' => JS_LIBRARY),
+      ),
+    );
+    $settings = $this->quickset->getSettings();
+    // Add the custom style css if a custom style has been set.
+    $style_css = quicktabs_get_css($settings['style']);
+    if (!empty($style_css)) {
+      $attached['css'][] = $style_css;
+    }
+    // Prepare a tab_settings array for passing the tab info to our JavaScript.
+    $tab_settings = array();
+    foreach ($this->quickset->getContents() as $i => $content) {
+      if (!empty($content)) {
+        $tab_settings[$i] = $content->getSettings();
+      }
+    }
+    // Add our JS settings
+    $javascript = drupal_add_js();
+    foreach ($javascript['settings']['data'] as $key => $settings) {
+      if (key($settings) == 'quicktabs') {
+        $qtkey = $key;
+        break;
+      }
+    }
+    $name = $this->quickset->getName();
+    if (!isset($qtkey) || (isset($javascript['settings']['data'][$qtkey]['quicktabs'])
+      && !array_key_exists('qt_' . $name, $javascript['settings']['data'][$qtkey]['quicktabs']))) {
+      $quicktabs_array = array_merge(array('name' => $name, 'tabs' => $tab_settings), $settings);
+      $attached['js'][] = array('data' => array('quicktabs' => array('qt_' . $name => $quicktabs_array)), 'type' => 'setting');
+    }
+    return $attached;
+  }
+  
+  /**
+   * Helper function to construct link options for tab links.
+   */
+  protected function construct_link_options($tabkey) {
+    $qt_name = $this->quickset->getName();
+    $id = 'quicktabs-tab-' . implode('-', array($qt_name, $tabkey));
+  
+    // Need to construct the correct querystring for the tab links.
+    $query = drupal_get_query_parameters(NULL, array("qt-$qt_name", 'q', 'page'));
+    $query["qt-{$qt_name}"] = $tabkey;
+  
+    $link_options = array(
+      'attributes' => array(
+        'id' => $id,
+      ),
+      'query' => $query,
+      'fragment' => 'qt-' . $qt_name,
+    );
+    return $link_options;
+  }
+}
\ No newline at end of file
diff --git a/quicktabs.module b/quicktabs.module
index 2278686..a56e2f3 100644
--- a/quicktabs.module
+++ b/quicktabs.module
@@ -118,6 +118,12 @@ function quicktabs_theme() {
     'qt_quicktabs_tabset' => array(
       'render element' => 'tabset',
     ),
+    'qt_vertical' => array(
+      'render element' => 'element',
+    ),
+    'qt_vertical_tab' => array(
+      'render element' => 'tabset',
+    ),
     'qt_accordion' => array(
       'render element' => 'element',
     ),
@@ -405,6 +411,13 @@ function quicktabs_quicktabs_renderers() {
       'class' => 'QuickAccordion',
     ),
   );
+  $info['vertical_tabs'] = array(
+    'path' => $path,
+    'handler' => array(
+      'file' => 'QuickVertical.inc',
+      'class' => 'QuickVertical',
+    ),
+  );
   return $info;
 }
 
@@ -628,3 +641,47 @@ function theme_qt_accordion($variables) {
   $output .= '</div>';
   return $output;
 }
+
+
+/**
+ * Theme function to output content for a quicktabs vertical style.
+ *
+ * @ingroup themeable
+ */
+function theme_qt_vertical($variables) {
+  $element = $variables['element'];
+  $output = '<div '. drupal_attributes($element['#options']['attributes']) .'>';
+  $output .= drupal_render($element['tabs']);
+
+  $output .= drupal_render($element['container']);
+
+  $output .= '</div>';
+  return $output;
+}
+
+/**
+ * Theme function to output tablinks for quicktabs vertical style tabz.
+ *
+ * @ingroup themeable
+ */
+function theme_qt_vertical_tab($vars) {
+  $variables = array(
+      'attributes' => array(
+          'class' => 'vertical-tabs-list quicktabs-tabs quicktabs-style-' . $vars['tabset']['#options']['style']
+      ),
+      'items' => array(),
+  );
+  foreach (element_children($vars['tabset']['tablinks']) as $key) {
+    $item = array();
+    if (is_array($vars['tabset']['tablinks'][$key])) {
+      $tab = $vars['tabset']['tablinks'][$key];
+      if ($key == $vars['tabset']['#options']['active']) {
+        $item['class'] = array('active');
+      }
+      $item['data'] = drupal_render($tab);
+      $variables['items'][] = $item;
+    }
+  }
+  return theme('item_list', $variables);
+}
+
